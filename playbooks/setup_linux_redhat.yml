---
- hosts: linux
  vars:
    pkgs:
      - sssd
      - sssd-tools
      - realmd
      - oddjob
      - oddjob-mkhomedir
      - adcli
      - samba-common
      - samba-common-tools
      - krb5-workstation
      - openldap-clients
  tasks:
    - name: Checking if running RedHat/CentOS
      fail:
        msg: The system is not running RedHat/CentOS 7, aborting
      when:
        - ansible_os_family != 'RedHat'
        - ansible_distribution_major_version != '7'
    - name: remove /etc/machine-id
      file:
        path: /etc/machine-id
        state: absent
    - name: remove /var/lib/dbus/machine-id
      file:
        path: /var/lib/dbus/machine-id
        state: absent
    - name: generate new machine-id
      command: systemd-machine-id-setup
    - name: Settings up hostname
      ansible.builtin.hostname:
        name: "{{ inventory_hostname }}.{{ dns_domain_name }}"
    - name: Set default as DNS operational mode
      ini_file:
        path: /etc/NetworkManager/NetworkManager.conf
        section: main
        option: dns
        value: none
        no_extra_spaces: yes
    - name: Reload NetworkManager
      systemd:
        name: NetworkManager
        enabled: yes
        state: reloaded
    - name: /etc/resolv.conf
      ansible.builtin.copy:
        dest: /etc/resolv.conf
        content: |
          search {{ dns_domain_name }}
          nameserver {{ hostvars[groups['domain_controllers'][0]].ip_address }}
          nameserver {{ hostvars[groups['domain_controllers'][0]].ip_gateway }}
    - name: Checking if packages required to join AD realm are present
      yum:
        name: "{{ pkgs }}"
        state: present
        update_cache: yes
    - name: Joining the AD realm (creating AD computer account and updating /etc/krb5.keytab)
      shell: echo '{{ hostvars[groups['domain_controllers'][0]].ansible_password }}' | realm join --verbose --client-software=sssd -U {{ hostvars[groups['domain_controllers'][0]].ansible_user }} {{ dns_domain_name | upper }}
      register: joining_ad
      failed_when: "'Successfully discovered' not in joining_ad.stderr"
    - debug:
        msg: "{{ joining_ad }}"
    - name: Creating AD server admin group
      shell: echo '{{ hostvars[groups['domain_controllers'][0]].ansible_password }}' | adcli create-group ADM_{{ inventory_hostname }} --stdin-password --domain={{ dns_domain_name | upper }} -U {{ hostvars[groups['domain_controllers'][0]].ansible_user }}
    - name: Configuring sudoers
      template:
        src: ADsudoers.j2
        dest: /etc/sudoers.d/ADsudoers
        owner: root
        group: root
        mode: 0440
    - name: Configuring sssd.conf
      template:
        src: sssd.j2
        dest: /etc/sssd/sssd.conf
        owner: root
        group: root
        mode: 0600
      tags: never
    - name: Configuring krb5.conf
      template:
        src: krb5.j2
        dest: /etc/krb5.conf
        owner: root
        group: root
        mode: 0644
      tags: never
    - name: Configuring PAM/SSHD to use SSSD
      shell: authselect select sssd with-mkhomedir --force
      tags: never
    - name: Enabling oddjobd service
      systemd:
        name: oddjobd.service
        enabled: yes
        state: started
    - name: Restarting SSSD
      systemd:
        name: sssd
        enabled: yes
        state: restarted
